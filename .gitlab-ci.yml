image: openjdk:11

stages:
  - build
  - test
  - docker
  - deploy
build:
  stage: build
  script:
    ./gradlew assemble
  artifacts:
    paths:
      - build/libs/*.jar
test:
  stage: test
  script:
    ./gradlew test
  artifacts:
    paths:
      - build/test-results/test/TEST*.xml

codeCoverage:
  image: adoptopenjdk:11
  needs:
    - build
  stage: test
  script:
    ./gradlew jacocoTestCoverageVerification
  allow_failure: true
  artifacts:
    paths:
      - build/reports/jacoco/**

docker:
  image: docker:20
  needs:
    - build
    - test
  stage: docker
  services:
    - docker:dind
  before_script:
    - echo "$MY_NAME"
    - echo $CI_BUILD_TOKEN | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE":"$CI_PIPELINE_IID" .
    - docker push "$CI_REGISTRY_IMAGE":"$CI_PIPELINE_IID"
    - docker tag "$CI_REGISTRY_IMAGE":"$CI_PIPELINE_IID" "$CI_REGISTRY_IMAGE":"latest"
    - docker push "$CI_REGISTRY_IMAGE":"latest"

production:
  stage: deploy
  image: registry.gitlab.com/galvanize-labs/instructors/aws-kubernetes-cluster/base-aws-eks-image:latest
  before_script:
    - export IMAGE="$CI_REGISTRY_IMAGE":"$CI_PIPELINE_IID"
    - aws configure set region us-west-2
    - aws configure set output json
    - aws eks update-kubeconfig --name "$CLUSTER_NAME"
    - aws sts get-caller-identity

  script:
    - envsubst < autos-deploy.yaml | kubectl apply -f -
    - kubectl apply -f autos-service.yaml